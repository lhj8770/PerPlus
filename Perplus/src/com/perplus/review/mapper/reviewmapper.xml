<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="review">

<!-- <sql id="review-comment-picture-join-select">
		select r.review_serial, r.member_email r_mail,r.review_title,r.review_content,r.review_rating,r.review_time,r.review_marker_x,r.review_marker_y,r.review_marker_constant,
				   c.comment_serial,c.review_serial,c.member_email c_mail,c.comment_content,c.comment_rating,c.comment_time,
				   p.picture_serial,p.review_serial,p.picture_order,p.picture_name
		from review r, reviewcomment c, reviewpicture p
		where c.review_serial = r.review_serial 
		and p.review_serial=c.review_serial 
</sql> -->

<!-- <resultMap type="ReviewVo" id="review-basic-resultmap">
	<id column="review_serial" property="reviewSerial"/>
	<result column="r_mail" property="memberEmail"/>
	<result column="review_title" property="reviewTitle"/>
	<result column="review_content" property="reviewContent"/>
	<result column="review_rating" property="reviewRating"/>
	<result column="review_time" property="reviewTime"/>
	<result column="review_marker_x" property="reviewMarkerX"/>
	<result column="review_marker_y" property="reviewMarkerY"/>
	<result column="review_marker_constant" property="reviewMarkerConstant"/>
</resultMap>
 -->
<!-- <resultMap type="ReviewVo" id="join-resultmap" extends="review-basic-resultmap">
	<collection property="reviewComment" ofType="reviewCommentVo" resultMap="reviewComment.comment-basic-resultmap"/>
	<collection property="reviewPicture" ofType="reviewPictureVo" resultMap="reviewPicture.picture-basic-resultmap"/>
</resultMap>
 -->
<!-- 리뷰 - 코멘트 -picture join select
<select id="selectReviewWithCommentAndPicture" parameterType="_int" resultMap="join-resultmap">
	<include refid="review-comment-picture-join-select"/>
	and r.review_serial = #{reviewSerial}
</select> -->

<!-- SELECT REVIEW BY SERIAL -->
<select id="selectReviewBySerial" parameterType="_int" resultType="ReviewVo">
	select review_serial reviewSerial, 
			 member_email memberEmail,
			 review_title reviewTitle,
			 review_content reviewContent,
			 review_rating reviewRating,
			 review_time reviewTime,
			 review_marker_x reviewMarkerX,
			 review_marker_y reviewMarkerY,
			 review_marker_constant reviewMarkerConstant,
			 review_place reviewPlace
	from review
	where review_serial=#{reviewSerial}
</select>


<!-- INSERT REVIEW -->
<insert id="insertReview" parameterType="ReviewVo">
	<selectKey resultType="_int" keyProperty="reviewSerial" order="BEFORE">
		select review_serial_seq.nextval from dual
	</selectKey> 	
	insert into review values(#{reviewSerial},#{memberEmail},#{reviewTitle},#{reviewContent},#{reviewRating},#{reviewTime},#{reviewMarkerX},#{reviewMarkerY},#{reviewMarkerConstant},#{reviewPlace})
</insert>

<!-- DELETE REVIEW -->
<delete id="deleteReview" parameterType="_int">
	delete from review
	where review_serial =#{reviewSerial}
</delete>

<!-- UPDATE REVIEW -->
<update id="updateReview" parameterType="ReviewVo" >
	update review
	set review_serial = #{reviewSerial},
		 member_email = #{memberEmail},
		 review_title = #{reviewTitle},
		 review_content = #{reviewContent},
		 review_rating = #{reviewRating},
		 review_time = #{reviewTime},
		 review_marker_x = #{reviewMarkerX},
		 review_marker_y = #{reviewMarkerY},
		 review_marker_constant = #{reviewMarkerConstant},
		 review_place=#{reviewPlace}
		where review_serial = #{reviewSerial}
</update>

<!--	SELECT REVIEW BY EMAIL  -->
<select id="selectReviewByEmail" parameterType="string" resultType="ReviewVo">
	select review_serial reviewSerial, 
			 member_email memberEmail,
			 review_title reviewTitle,
			 review_content reviewContent,
			 review_rating reviewRating,
			 review_time reviewTime,
			 review_marker_x reviewMarkerX,
			 review_marker_y reviewMarkerY,
			 review_marker_constant reviewMarkerConstant,
			 review_place reviewPlace
	from review
	where member_email = #{memberEmail}
	order by reviewSerial desc
</select>

<!-- SELECT ALL REVIEW LIST -->
<select id="selectAllReview" resultType="ReviewVo">
	select review_serial reviewSerial, 
			 member_email memberEmail,
			 review_title reviewTitle,
			 review_content reviewContent,
			 review_rating reviewRating,
			 review_time reviewTime,
			 review_marker_x reviewMarkerX,
			 review_marker_y reviewMarkerY,
			 review_marker_constant reviewMarkerConstant,
			 review_place reviewPlace
	from review
</select>

<!-- map을 위한 쿼리 -->
<!-- 
map 구성
southWestLat
southWestLng
northEastLat
northEashLng
범위 지정
 -->
<select id="selectMarkerBySection" parameterType="hashMap" resultType="hashmap">
	select 
		review_serial reviewSerial, 
		member_email memberEmail,
		review_title reviewTitle,
		review_content reviewContent,
		review_rating reviewRating,
		review_time reviewTime,
		review_marker_x reviewMarkerX,
		review_marker_y reviewMarkerY,
		review_marker_constant reviewMarkerConstant,
		review_place reviewPlace
	from REVIEW 
	where (review_marker_x between #{southWestLat} and #{northEastLat})
	and	  (review_marker_y between #{southWestLng} and #{northEastLng})
</select>

</mapper>









<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="chatting">

	<insert id="createChatting">
		insert into CHATTING values(chatting_seq.nextval,#{chattingPartner},#{memberEmail})
	</insert>

	<delete id="deleteChatting" parameterType="_int">
		delete from CHATTING where chatting_number = #{chattingNumber}
	</delete>

	<select id="selectMyChatting" parameterType="string" resultType="ChattingVo">
		select	chatting_number chattingNumber, member_email memberEmail, chatting_partner chattingPartner
		from	CHATTING
		where	chatting_partner = #{value}
		or		member_email = #{value}
	</select>

	<select id="findByChattingNumber" parameterType="hashmap" resultType="ChattingVo">
		select	chatting_number chattingNumber, member_email memberEmail, chatting_partner chattingPartner
		from	CHATTING
		where	chatting_partner = #{chattingPartner}
		and		member_email = #{memberEmail}
	</select>
	
	
	<sql id="select-chatting-join-sql">
		select	c.chatting_number,
				c.chatting_partner,
				c.member_email,
				l.member_email,
				l.member_content
		from	CHATTING c, CHATTINGLOG l
	</sql>
	<resultMap type="ChattingVo" id="chatting-default-resultmap">
		<id column="chatting_number" property="chattingNumber"/>
		<result column="member_email" property="memberEmail"/>
		<result column="chatting_partner" property="chattingPartner"/>
	</resultMap>
	
	<resultMap type="ChattingVo" id="chatting-chattinglog-join-resultmap" extends="chatting-default-resultmap">
		<collection property="list" ofType="ChattingLogVo">
			<result column="chatting_number" property="chattingNumber"/>
			<result column="member_email" property="memberEmail"/>
			<result column="chatting_content" property="chattingContent"/>
		</collection>
	</resultMap>
	
	<select id="wwww" resultMap="chatting-chattinglog-join-resultmap">
		<include refid="select-chatting-join-sql"/>
	</select>

</mapper>